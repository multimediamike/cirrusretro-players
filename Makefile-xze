# build architecture inspired by this page:
# http://make.mad-scientist.net/papers/multi-architecture-builds/

ifeq ($(notdir $(CURDIR)), cirrusretro-players)
include target-xze.mk
else

TARGET:=xzdec.js
.DEFAULT_GOAL:=$(TARGET)

CC:=emcc

XZ_SRCDIR=$(SRCDIR)/xz-embedded
VPATH=$(SRCDIR):$(XZ_SRCDIR)
FINALDIR=$(SRCDIR)/final

EXPORT_LIST="['_xz_decompress']"

# compile XZ objects
XZ_C_SOURCES:=xzdec.c xz_crc32.c xz_dec_lzma2.c xz_dec_stream.c
XZ_C_OBJECTS:=$(subst .c,.js.o,$(XZ_C_SOURCES))
XZ_CFLAGS:=-Wall -Os -I$(XZ_SRCDIR) -Wno-warn-absolute-paths
%.js.o : %.c
	$(CC) -o $@ -c $< $(XZ_CFLAGS)

$(TARGET): $(XZ_C_OBJECTS)
	$(CC) -o $(TARGET) $^ $(XZ_CFLAGS) -s EXPORTED_FUNCTIONS="['_xz_decompress']"
	mkdir -p $(FINALDIR)
	cp $(TARGET) $(FINALDIR)
	cp $(TARGET).mem $(FINALDIR)


# dependencies
DEPS:=$(subst .c,.d,$(XZ_C_SOURCES))
include $(DEPS)

%.d: %.c
	$(CC) -MM $(XZ_CFLAGS) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

endif
